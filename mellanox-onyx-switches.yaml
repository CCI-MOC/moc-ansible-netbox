- name: "Register Mellanox Onyx Devices"
  hosts: mellanox_onyx
  tasks:

    - name: "Cacluate and set rack, rack_number and rackpos"
      include_role:
        name: calcuate-rack-position
      vars:
        ipmi_ip: "{{ ansible_host }}"

    - name: "Get facts"
      mellanox.onyx.onyx_facts:
        gather_subset: all

    - name: "Set some standard facts"
      set_fact:
        manufacturer: "Mellanox"
        model: "{{ ansible_net_version['Product name'] }}"
        serial: "{{ ansible_net_version['Host ID'] }}"
        device_name: "{{ inventory_hostname }}"

    - name: "Create dictionary mapping speed to interface type"
      set_fact:
        speed_map: {
          '40 Gbps': 'QSFP+ (40GE)'
        }

    - name: "Create the device_type"
      ignore_errors: true
      netbox.netbox.netbox_device_type:
        netbox_url: "{{ netbox_url }}"
        netbox_token: "{{ netbox_token }}"
        data:
          manufacturer: "{{ manufacturer }}"
          model: "{{ model }}"
        state: present
      delegate_to: 127.0.0.1

    - name: "Register the device in netbox"
      ignore_errors: true
      netbox.netbox.netbox_device:
        netbox_url: "{{ netbox_url }}"
        netbox_token: "{{ netbox_token }}"
        data:
          name: "{{ device_name }} "
          serial: "{{ serial }}"
          device_type: "{{ model }}"
          rack: "{{ rack }}"
          position: "{{rackpos}}"
          device_role: data_switch
          face: front
          location: "{{ location }}"
          site: MGHPCC
        state: present
      delegate_to: 127.0.0.1

    - name: "Create network interfaces"
      netbox.netbox.netbox_device_interface:
        netbox_url: "{{ netbox_url }}"
        netbox_token: "{{ netbox_token }}"
        data:
          name: "{{ item }}"
          device: "{{ device_name }}"
          mac_address: "{{ interface['MAC Address'] }}"
          type: "{{ speed_map[interface['Actual Speed']] | default('Unkown') }}"
        state: present
      vars:
        interface: >-
          {{ ansible_net_interfaces[item] }}
      delegate_to: 127.0.0.1
      loop: "{{ansible_net_interfaces.keys() | list}}"

    - name: "Create management interface of the switch"
      netbox.netbox.netbox_device_interface:
        netbox_url: "{{ netbox_url }}"
        netbox_token: "{{ netbox_token }}"
        data:
          device: "{{ device_name }}"
          name: management
          type: 1000Base-t (1GE)
          mgmt_only: true
        state: present
      delegate_to: 127.0.0.1

    - name: "Associate IP address with management interface"
      netbox.netbox.netbox_ip_address:
        netbox_url: "{{ netbox_url }}"
        netbox_token: "{{ netbox_token }}"
        data:
          address: "{{ ansible_host }}"
          assigned_object:
            name: management
            device: "{{ device_name }}"
        state: present
