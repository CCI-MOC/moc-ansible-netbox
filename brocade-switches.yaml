- name: "Gather required information"
  hosts: brocade
  tasks:

    # it's important to get the rbridge id to get the hostname
    - name: "Get rbridge ID"
      community.network.nos_command:
        commands: >-
          show chassis | inc Rbridge
      register: rbridge_stdout
      vars:
        ansible_command_timeout: 90

    - name: "Get hostname"
      community.network.nos_command:
        commands: >-
          show running-config rbridge-id "{{rbridge_id}}" | inc host-name
      register: hostname_stdout
      vars:
        ansible_command_timeout: 90
        rbridge_id: "{{ rbridge_stdout.stdout[0].split(':')[1] }}"
        # need to extract the id from an output like this
        # "stdout": ["Rbridge-id: 4"]

    - name: "Get switch model"
      community.network.nos_command:
        commands: >-
          show chassis | inc Chassis
      register: chassis_stdout
      vars:
        ansible_command_timeout: 90

    - name: "Get serial number"
      community.network.nos_command:
        commands: >-
          show chassis | inc Serial | last 1
      register: serial_stdout
      vars:
        ansible_command_timeout: 90

    - name: "Calcuate rack and rackpos"
      set_fact:
        rack: "{{ parsed_address[-2] }}"
        rackpos: "{{ parsed_address[-1] }}"
      vars:
        parsed_address: "{{ ansible_host | split('.') }}"

    - name: "Set hostname"
      set_fact:
        brocade_hostname: "{{ hostname_stdout.stdout[0].split(' ')[2] }} "
        brocade_serial: "{{ serial_stdout.stdout[0].split(':')[1] }}"
        brocade_model: "{{ chassis_stdout.stdout[0].split(':')[1] }}"
        rbridge_id: "{{ rbridge_stdout.stdout[0].split(':')[1] }}"

    - name: "Create the device_type"
      netbox.netbox.netbox_device_type:
        netbox_url: "{{ netbox_url }}"
        netbox_token: "{{ netbox_token }}"
        data:
          manufacturer: Brocade
          model: "{{ brocade_model }}"
        state: present
      delegate_to: 127.0.0.1

    - name: "Register the device in netbox"
      netbox.netbox.netbox_device:
        netbox_url: "{{ netbox_url }}"
        netbox_token: "{{ netbox_token }}"
        data:
          name: "{{ brocade_hostname |trim}}"
          serial: "{{ brocade_serial }}"
          device_type: "{{ brocade_model }}"
          rack: "{{ 'row3/podB/cage' + rack }}"
          position: "{{rackpos}}"
          device_role: network-switch
          face: front
          location: Row 3 Pod B
          site: MGHPCC
        state: present
      delegate_to: 127.0.0.1

    - name: "Create 10G network interfaces"
      netbox.netbox.netbox_device_interface:
        netbox_url: "{{ netbox_url }}"
        netbox_token: "{{ netbox_token }}"
        data:
          name: >-
            TenGigabitEthernet {{rbridge_id}}/0/{{item}}
          device: "{{ brocade_hostname |trim}}"
          type: SFP+ (10GE)
        state: present
      delegate_to: 127.0.0.1
      loop: "{{ range(1, 48 + 1, 1)|list }}"

    - name: "Create 40G network interfaces"
      netbox.netbox.netbox_device_interface:
        netbox_url: "{{ netbox_url }}"
        netbox_token: "{{ netbox_token }}"
        data:
          name: >-
            FortyGigabitEthernet {{rbridge_id}}/0/{{item}}
          device: "{{ brocade_hostname |trim}}"
          type: QSFP+ (40GE)
        state: present
      delegate_to: 127.0.0.1
      loop: "{{ range(49, 52 + 1, 1)|list }}"
