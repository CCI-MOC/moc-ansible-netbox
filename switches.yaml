- name: "Gather required information"
  hosts: switches
  tasks:

    - name: "Get facts about cisco switches"
      cisco.nxos.nxos_facts:
        gather_subset: all
      when: ansible_network_os == 'cisco.nxos.nxos'

    - name: "Calcuate rack and rackpos"
      set_fact:
        rack: "{{ parsed_address[-2] }}"
        rackpos: "{{ parsed_address[-1] }}"
      vars:
        parsed_address: "{{ ansible_host | split('.') }}"

    - name: "Create the device_type"
      ignore_errors: true
      netbox.netbox.netbox_device_type:
        netbox_url: "{{ netbox_url }}"
        netbox_token: "{{ netbox_token }}"
        data:
          manufacturer: Cisco
          model: "{{ ansible_net_model }}"
        state: present
      delegate_to: 127.0.0.1
      when: ansible_network_os == 'cisco.nxos.nxos'

    - name: "Register the device in netbox"
      ignore_errors: true
      netbox.netbox.netbox_device:
        netbox_url: "{{ netbox_url }}"
        netbox_token: "{{ netbox_token }}"
        data:
          name: "{{ inventory_hostname }} "
          serial: "{{ ansible_net_serialnum }}"
          device_type: "{{ ansible_net_model }}"
          rack: "{{ 'row3/podB/cage' + rack }}"
          position: "{{rackpos}}"
          device_role: test-role
          face: front
          location: Row 3 Pod B
          site: MGHPCC
        state: present
      delegate_to: 127.0.0.1

    - name: "Create 10G network interfaces"
      netbox.netbox.netbox_device_interface:
        netbox_url: "{{ netbox_url }}"
        netbox_token: "{{ netbox_token }}"
        data:
          name: "{{ item }}"
          device: "{{ inventory_hostname }}"
          mac_address: "{{ interface.macaddress }}"
          description: "{{ interface.description }}"
          mode: "{{ (interface.mode == 'trunk') | ternary('Tagged', 'Access') }}"
          type: SFP+ (10GE)
        state: present
      vars:
        interface: >-
          {{ ansible_net_interfaces[item] }}
      delegate_to: 127.0.0.1
      loop: "{{ansible_net_interfaces.keys() | list}}"
      when: interface.type == "1000/10000 Ethernet"

    - name: "Create 40G network interfaces"
      netbox.netbox.netbox_device_interface:
        netbox_url: "{{ netbox_url }}"
        netbox_token: "{{ netbox_token }}"
        data:
          name: "{{ item }}"
          device: "{{ inventory_hostname }}"
          mac_address: "{{ interface.macaddress }}"
          description: "{{ interface.description }}"
          mode: "{{ (interface.mode == 'trunk') | ternary('Tagged', 'Access') }}"
          type: QSFP+ (40GE)
        state: present
      vars:
        interface: >-
          {{ ansible_net_interfaces[item] }}
      delegate_to: 127.0.0.1
      loop: "{{ansible_net_interfaces.keys() | list}}"
      when: interface.type == "40000 Ethernet"

    - name: "Create port-channels"
      netbox.netbox.netbox_device_interface:
        netbox_url: "{{ netbox_url }}"
        netbox_token: "{{ netbox_token }}"
        data:
          name: "{{ item }}"
          device: "{{ inventory_hostname }}"
          mac_address: "{{ interface.macaddress }}"
          description: "{{ interface.description }}"
          mode: "{{ (interface.mode == 'trunk') | ternary('Tagged', 'Access') }}"
          type: Link Aggregation Group (LAG)
        state: present
      vars:
        interface: >-
          {{ ansible_net_interfaces[item] }}
      delegate_to: 127.0.0.1
      loop: "{{ansible_net_interfaces.keys() | list}}"
      when: interface.type == "Port-Channel"
